import{_ as s,c as a,o as n,N as e}from"./chunks/framework.74d38e29.js";const C=JSON.parse('{"title":"接口","description":"","frontmatter":{},"headers":[],"relativePath":"pages/typescript/interface.md","lastUpdated":1681118086000}'),l={name:"pages/typescript/interface.md"},p=e(`<h1 id="接口" tabindex="-1">接口 <a class="header-anchor" href="#接口" aria-label="Permalink to &quot;接口&quot;">​</a></h1><h2 id="接口简单理解就是一个对象的-轮廓" tabindex="-1">接口简单理解就是一个对象的“轮廓” <a class="header-anchor" href="#接口简单理解就是一个对象的-轮廓" aria-label="Permalink to &quot;接口简单理解就是一个对象的“轮廓”&quot;">​</a></h2><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">interface InterfaceA {</span></span>
<span class="line"><span style="color:#A6ACCD;">  name: string;</span></span>
<span class="line"><span style="color:#A6ACCD;">  value?: string | number;</span></span>
<span class="line"><span style="color:#A6ACCD;">  total?: number;</span></span>
<span class="line"><span style="color:#A6ACCD;">  checked?: boolean;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="接口是可以继承接口的" tabindex="-1">接口是可以继承接口的 <a class="header-anchor" href="#接口是可以继承接口的" aria-label="Permalink to &quot;接口是可以继承接口的&quot;">​</a></h2><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">interface InterfaceB extends InterfaceA {</span></span>
<span class="line"><span style="color:#A6ACCD;">  closable?: boolean;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这样 InterfaceB 就包含了 InterfaceA 属性和自己的 closable 可选属性。</p><h2 id="接口也是可以被类实现的" tabindex="-1">接口也是可以被类实现的 <a class="header-anchor" href="#接口也是可以被类实现的" aria-label="Permalink to &quot;接口也是可以被类实现的&quot;">​</a></h2><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">interface Alarm {</span></span>
<span class="line"><span style="color:#A6ACCD;">  alert(): void;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">class Door {</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">class SecurityDoor extends Door implements Alarm {</span></span>
<span class="line"><span style="color:#A6ACCD;">  alert() {</span></span>
<span class="line"><span style="color:#A6ACCD;">    console.log(&#39;SecurityDoor alert&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>如果类实现了一个接口，却不写具体的实现代码，则会有错误提示</p><h2 id="接口可以声明合并" tabindex="-1">接口可以声明合并 <a class="header-anchor" href="#接口可以声明合并" aria-label="Permalink to &quot;接口可以声明合并&quot;">​</a></h2><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">interface Box {</span></span>
<span class="line"><span style="color:#A6ACCD;">    height: number;</span></span>
<span class="line"><span style="color:#A6ACCD;">    width: number;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">interface Box {</span></span>
<span class="line"><span style="color:#A6ACCD;">    scale: number;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">let box: Box = {height: 5, width: 6, scale: 10};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>虽然支持这个特性，但是实际开发不要这么写！</p>`,12),r=[p];function c(i,o,t,b,u,d){return n(),a("div",null,r)}const A=s(l,[["render",c]]);export{C as __pageData,A as default};
