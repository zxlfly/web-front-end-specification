import{_ as s,c as a,o as n,N as e}from"./chunks/framework.74d38e29.js";const h=JSON.parse('{"title":"函数","description":"","frontmatter":{},"headers":[],"relativePath":"pages/typescript/function.md","lastUpdated":1681118086000}'),l={name:"pages/typescript/function.md"},r=e(`<h1 id="函数" tabindex="-1">函数 <a class="header-anchor" href="#函数" aria-label="Permalink to &quot;函数&quot;">​</a></h1><h2 id="主要定义函数参数和返回值类型。" tabindex="-1">主要定义函数参数和返回值类型。 <a class="header-anchor" href="#主要定义函数参数和返回值类型。" aria-label="Permalink to &quot;主要定义函数参数和返回值类型。&quot;">​</a></h2><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">const sum = (x: number, y: number): number =&gt; {  </span></span>
<span class="line"><span style="color:#A6ACCD;">  return x + y  </span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>以上代码包含以下 TS 校验规则：</p><ul><li>调用 sum 函数时，必须传入两个参数，多一个或者少一个都不行</li><li>并且这两个参数的类型要为 number 类型</li><li>且函数的返回值为 number 类型</li></ul><h2 id="用问号-可以表示该参数是可选的" tabindex="-1">用问号 ? 可以表示该参数是可选的 <a class="header-anchor" href="#用问号-可以表示该参数是可选的" aria-label="Permalink to &quot;用问号 ? 可以表示该参数是可选的&quot;">​</a></h2><p>可选参数必须放在最后面，他的后面不能跟非可选参数</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">const sum = (x: number, y?: number): number =&gt; {  </span></span>
<span class="line"><span style="color:#A6ACCD;">  return x + (y || 0);  </span></span>
<span class="line"><span style="color:#A6ACCD;">}  </span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">sum(1)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,8),p=[r];function t(i,c,o,u,d,m){return n(),a("div",null,p)}const _=s(l,[["render",t]]);export{h as __pageData,_ as default};
