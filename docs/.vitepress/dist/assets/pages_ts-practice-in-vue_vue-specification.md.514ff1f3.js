import{_ as e,c as a,o as t,N as i}from"./chunks/framework.74d38e29.js";const v=JSON.parse('{"title":"Vue 规范","description":"","frontmatter":{},"headers":[],"relativePath":"pages/ts-practice-in-vue/vue-specification.md","lastUpdated":1681118086000}'),l={name:"pages/ts-practice-in-vue/vue-specification.md"},r=i('<h1 id="vue-规范" tabindex="-1">Vue 规范 <a class="header-anchor" href="#vue-规范" aria-label="Permalink to &quot;Vue 规范&quot;">​</a></h1><h2 id="_1-2-1-vue-template" tabindex="-1">1.2.1 Vue Template <a class="header-anchor" href="#_1-2-1-vue-template" aria-label="Permalink to &quot;1.2.1 Vue Template&quot;">​</a></h2><ul><li>属性绑定值或事件绑定方法名必须使用 &quot;&quot; 双引号</li><li>多个特性的元素应该分多行撰写，每个特性一行。</li><li>v-if和v-for避免一起使用</li></ul><h2 id="_1-2-1-vue-script" tabindex="-1">1.2.1 Vue script <a class="header-anchor" href="#_1-2-1-vue-script" aria-label="Permalink to &quot;1.2.1 Vue script&quot;">​</a></h2><ul><li>自定义事件函数，以emit打头</li><li>props最少得约束类型，尽可能的详细</li><li>使用组合式API（Composition API），业务逻辑代码提取到对应的composables目录下 <ul><li>命名方式同上</li><li>关于类型约束，约束建议提取到单独的类型ts文件中，让页面逻辑更简洁清晰</li><li><a href="https://github.com/DevCloudFE/vue-devui/tree/dev/packages/devui-vue/devui/auto-complete/src" target="_blank" rel="noreferrer">参考链接</a></li></ul></li></ul><h2 id="_1-2-1-vue-style" tabindex="-1">1.2.1 Vue style <a class="header-anchor" href="#_1-2-1-vue-style" aria-label="Permalink to &quot;1.2.1 Vue style&quot;">​</a></h2><ul><li>class使用小写字母，以中划线分隔</li><li>id使用使用小写字母，以下划线分隔</li><li>非必要不要使用!important</li></ul><h2 id="vue-tsx" tabindex="-1">Vue TSX <a class="header-anchor" href="#vue-tsx" aria-label="Permalink to &quot;Vue TSX&quot;">​</a></h2><p>目前根据公司前端实际工作使用的方案，暂不考虑使用TSX。维持SFC模式。</p>',9),o=[r];function u(s,c,n,p,d,_){return t(),a("div",null,o)}const m=e(l,[["render",u]]);export{v as __pageData,m as default};
